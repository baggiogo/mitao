<?php
! defined ( 'P_W' ) && exit ( 'Forbidden' );
 defined('P_W') || exit('Forbidden'); class ReplyJobHookitem extends PW_HookItem { function run () { $tid = $this->getVar('tid'); $db_htmifopen = $this->getVar('db_htmifopen'); $winduid = $this->getVar('winduid'); require_once(R_P.'require/functions.php'); $_cacheService = Perf::gatherCache('pw_threads'); $thread = ($page>1) ? $_cacheService->getThreadByThreadId($tid) : $_cacheService->getThreadAndTmsgByThreadId($tid); initJob($winduid,"doReply",array('tid'=>$tid,'user'=>$thread['author'])); } } defined('P_W') || exit('Forbidden'); class ReplyBehaviorHookitem extends PW_HookItem { function run () { $db_md_ifopen = $this->getVar('db_md_ifopen'); $winduid = $this->getVar('winduid'); $winddb = $this->getVar('winddb'); $tpcarray = $this->getVar('tpcarray'); require_once(R_P.'require/functions.php'); doMedalBehavior($winduid,'continue_post',$winddb['lastpost']); if ($db_md_ifopen) { $medalservice = L::loadClass('medalservice','medal'); $medalservice->runAutoMedal($winddb,'post',$winddb['postnum'],1); } if (!$tpcarray['replies']) { $userServer = L::loadClass('UserService', 'user'); $userServer->updateByIncrement($winduid, array(), array('shafa' => 1)); if ($db_md_ifopen) { $medalservice->runAutoMedal($winddb,'shafa',$winddb['shafa']+1,1); } } } }defined('P_W') || exit('Forbidden'); class ReplyRewardHookitem extends PW_HookItem { function run () { $tid = $this->getVar('tid'); $uid = $this->getVar('winduid'); $pid = $this->getVar('pid'); $replyRewardRecordService = L::loadClass('ReplyRewardRecord', 'forum'); $GLOBALS['isReplyRewardSuccess'] = $replyRewardRecordService->rewardReplyUser($uid, $tid, $pid); } }